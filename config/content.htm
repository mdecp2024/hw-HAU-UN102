<h1>About</h1>
<p>國立虎尾科技大學機械設計工程系</p>
<p>National Formosa University</p>
<p>Department of Mechanical Design Engineering</p>
<p>cp2024 計算機程式</p>
<p>課程教材:</p>
<p style="padding-left: 30px;"><a href="https://blog.jupyter.org/introducing-learn-python-with-jupyter-11214f152159">Learn Python with Jupyter</a> (<a href="https://www.learnpythonwithjupyter.com/">site</a>, <a href="https://localhost:9445/downloads/learn_python_with_jupyter.pdf">ebook</a>)</p>
<p style="padding-left: 30px;">教育版帳號 microsoftonline 登入點: <a href="https://login.microsoftonline.com/">https://login.microsoftonline.com/</a></p>
<p>Teams 線上教學:</p>
<p style="padding-left: 30px;">以 "學號@nfu.edu.tw" 登入 <a href="https://login.microsoftonline.com/">https://login.microsoftonline.com/</a> Office 365</p>
<p style="padding-left: 30px;">Teams 團隊代碼: <span class="fui-Text ___vec8h90 fk6fouc f1pbo8a8 f1i3iumi figsok6 fpgzoln f1w7gpdv f6juhto f1mtd64y f1y7q3j9 f2jf649 foxqkq2" data-tid="join-team-code">ldodwua</span></p>
<p>個人倉儲:<a href="https://github.com/mdecp2024/hw-HAU-UN102">https://github.com/mdecp2024/hw-HAU-UN102</a></p>
<p>個人網站:<a href="https://mdecp2024.github.io/hw-HAU-UN102/content/index.html">https://mdecp2024.github.io/hw-HAU-UN102/content/index.html</a></p>
<p>其他資訊:</p>
<p style="padding-left: 30px;"><a href="/downloads/cd2023_pj3ag4_zmq_football_4.7.7z">cd2023_pj3ag4_zmq_football_4.7.7z</a></p>
<p style="padding-left: 30px;"><a href="https://localhost:9446/downloads/cd2024_2b_g6_steel_ball_platform_nxopen_copsim.7z">cd2024_2b_g6_steel_ball_platform_nxopen_copsim.7z</a></p>
<h1>Attendance</h1>
<p>出席 (10%) - 自行舉證評分</p>
<p>自行利用 Github commits 提交記錄評分.</p>
<h1>HW 1</h1>
<h4>主題: 基於瀏覽器的分散式版次管理與整合程式開發環境 (10%)<span style="background-color: #ffff99;"><br/></span></h4>
<p style="padding-left: 30px;">USB 隨身碟:</p>
<p style="padding-left: 60px;">下載 <a href="http://229.cycu.org/python_2025_lite.7z">python_2025_lite.7z</a> (428 MB, 解開壓縮後約 1.5 GB)</p>
<p style="padding-left: 30px;"><a href="https://mde.tw/cp2024/content/Jupyter.html">Jupyter</a></p>
<p style="padding-left: 30px;">What are Github and Codespaces?</p>
<p style="padding-left: 60px;"><a href="https://docs.github.com/en/get-started/start-your-journey/hello-world">Hello World - GitHub Docs</a></p>
<p style="padding-left: 30px;">利用包含學號的字串作為帳號, 申請免費使用 Github.</p>
<p style="padding-left: 30px;">Python 課程教材: <a href="https://www.learnpythonwithjupyter.com/">https://www.learnpythonwithjupyter.com/</a> - PART 1</p>
<hr/>
<p>PART 1: Creating the basics 資料整理 (10%)</p>
<p>啟動可攜程式系統後, 在命令列中:</p>
<p>y:\&gt;cd notebook</p>
<p>y:\notebook&gt;jupyter lab --collaborative</p>
<p>進入 <a href="/downloads/01_string_input_print.ipynb">01_string_input_print.ipynb</a> 練習如何修改 PART1 notebook 後存檔, 上傳至作業倉儲中的 downloads 目錄後, 透過 <a href="https://nbviewer.org/">https://nbviewer.org/</a> 將已經提交的 <a href="/downloads/01_string_input_print.ipynb">01_string_input_print.ipynb</a>, 嵌入下列網頁中.</p>
<p><iframe height="400" src="https://nbviewer.org/urls/mde.tw/cp2024_hw/downloads/01_string_input_print.ipynb" width="600"></iframe></p>
<p>上列 iframe 標註的 html 語法:</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">&lt;iframe width="600" height="400" src="https://nbviewer.org/urls/mde.tw/cp2024_hw/downloads/01_string_input_print.ipynb"&gt;&lt;/iframe&gt;</pre>
<p>完成上述流程整理後, 請將 HW1 自評分數輸入 cp2024 自評表單中.</p>
<h2>HW 1 Exam</h2>
<p>每六人為一組進行協同程式練習</p>
<p>透過 Jupyterlab 協同網頁, 輪流指定各組編寫 Topic 1 相關的程式練習, 以及網頁內容 (localhost 與 Codespaces 環境)編輯.</p>
<h3>Brthon建立</h3>
<p></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/gLwNyBemEXc?si=KLA0nBZLEurFtsrH" title="YouTube video player" width="560"></iframe></p>
<h3>w10</h3>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/Av4h3sDLcUs?si=zH4viwbHvNz-NZVM" title="YouTube video player" width="560"></iframe></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/LCBAbJLt-ko?si=-5E31BcQVVfJ9lAC" title="YouTube video player" width="560"></iframe></p>
<p><br/><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/O3VwkLsCyvs?si=Uesz_1_xZqnLevAz" title="YouTube video player" width="560"></iframe></p>
<h3>w11_hw</h3>
<p><a href="https://mdecp2024.github.io/hw-HAU-UN102/content/Brython.html?src=https://gist.githubusercontent.com/HAU-UN102/4ad666dd931d6ba12976876f49eca2a3/raw/731ee17c45d77027c3c528c009be05e5de0287ea/w11-%25E5%259C%2593">w11題目一</a></p>
<p><a href="https://mdecp2024.github.io/hw-HAU-UN102/content/Brython.html?src=https://gist.githubusercontent.com/HAU-UN102/e080f0bfaae198603d73f73a3c1757ff/raw/4e2aaefcff4f2ed855cdd2622a0c5837e07adfcc/w11-%25E6%2596%25B9%25E5%25A1%258A">w11題目二</a></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src='//www.youtube.com/embed/tqURP60mmv4?si=xNyxPlrNQfjbgIni" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen&gt;&lt;/iframe&gt;' width="560"></iframe></p>
<p><span>我們利用兩種程式來繪製形狀，一種是利用*來畫圓的外框，而另一種則是利用馬賽克來表示圓，對於學設計的我們，可以好好利用程式來幫我們畫圖，進一步來完成一些基本圖形。</span></p>
<p><img alt="" height="324" src="/images/圓.png" width="315"/></p>
<h3>w12_hw</h3>
<p><a href="https://mdecp2024.github.io/hw-HAU-UN102/content/Brython.html?src=https://gist.githubusercontent.com/HAU-UN102/52dc55d55052c30c94ca46093028cbe1/raw/803a9aea40c9d0ba0b136b6c8971b8639d37ca2e/w12_1">w12_1</a></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src='//www.youtube.com/embed/cDSg_2Cpw_U?si=Wo-DeTN7U_IDbcHT" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen&gt;&lt;/iframe&gt;' width="560"></iframe></p>
<p>第一題:01_string_input_print</p>
<p><span>Text, questions, and art (文字、問題和藝術) </span></p>
<p><span>說明:Strings, input(), and print() (字串、input()和print())</span></p>
<p><span>input() 範例 <a href="https://mdecp2024.github.io/hw-HAU-UN102/content/Brython.html?src=https://gist.githubusercontent.com/HAU-UN102/847de027d8c1a1ad8492a3c08354637e/raw/94d0616b2c1899080dccc53388e1321dee8fb353/w12_01_string_input_print">Where are you from?</a></span></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">input("Where are you from?")</pre>
<p>print()  範例 <a href="https://mdecp2024.github.io/hw-HAU-UN102/content/Brython.html?src=https://gist.githubusercontent.com/HAU-UN102/b1bf8989a98205eb8291319e30e7f04e/raw/ec86c1890497f026707f4a3289d83c106bcc5592/w12_01_string_input_print_2">cat</a></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">print (" /\_/\   ")
print (" &gt;^.^&lt;   ")
print ("  / \    ")
print (" (___)___")</pre>
<p><span>第二題:02_variables</span></p>
<p><span>Q1:Events and favorites(活動和最愛)</span></p>
<p><span>說明:Variables and string concatenation(變數和字串連接)</span></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">first_name = "Fernando" # 將 "Fernando" 賦值給變數 first_name
last_name = "Pérez"       # 將 "Pérez" 賦值給變數 last_name

print(first_name)            # 輸出變數 first_name 的值，也就是 "Fernando"
print(last_name)            # 輸出變數 last_name 的值，也就是 "Pérez"</pre>
<p>Q2 <a href="https://mdecp2024.github.io/hw-HAU-UN102/content/Brython.html?src=https://gist.githubusercontent.com/HAU-UN102/3931620d4c7b7f11768871131e3e333b/raw/d0513790969583ed51dc1eedbf210aeb4aaf171d/w12_01_string_input_print_2-2">名字+最愛的食物</a></p>
<div class="line number1 index0 alt2">
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">name = input("What's your name?") #變數name為input所輸入之文字
favorite_food = input ("What is your favorite food?") #變數favorite_food為input所輸入之文字
print ("Hi! My name is " + name) #列印"Hi! My name is "(這段為文字) + name(name這個變數的數值)
print ("My favorite food is " + favorite_food)  #列印"My favorite food is "(這段為文字) + favorite_food(favorite_food這個變數的數值)
print (name + "'s favorite food is " + favorite_food) #列印name (數值)+ 's favorite food is (此段為文字)+favorite_food(數值)</pre>
</div>
<div class="line number1 index0 alt2"></div>
<div class="line number1 index0 alt2">第三題: (if)判斷式</div>
<p>Q3: <a href="https://mdecp2024.github.io/hw-HAU-UN102/content/Brython.html?src=https://gist.githubusercontent.com/HAU-UN102/773294daedf60ffae01686097801c45b/raw/a5ccb23be05d05ad96e2f735a8bbb3adc36335e2/w12%252003_list_if_in_else">bookstor</a></p>
<div>
<div class="line number1 index0 alt2">
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">programming_books = ["Learn python", "Python for all",  "Intro to python"] #programming_books變數裡面有3個字串
print (programming_books) #列印programming_books變數(會出現三個字串)
wanted_book = input("Hi! What book would you like to buy?") #設定一個變數為wanted_book其等於input指令回傳之數值
print (wanted_book) #列印wanted_book變數
if wanted_book in programming_books: #如果 "變數wanted_book"回傳之值 在"programming_books"字串當中
   print ("Yes, we sell it!")       #列印 是的我們有販賣
else:                            #反之   
    print ("Sorry, we don't sell that book") #列印 抱歉我們沒有販賣</pre>
</div>
</div>
<p>第四題:append() remove()<br/>Q4:<a href="https://mdecp2024.github.io/hw-HAU-UN102/content/Brython.html?src=https://gist.githubusercontent.com/HAU-UN102/c0e9f698d59cf8ac8274d6e34424c012/raw/6bd73cd53f93325e4b5c8aeaaf13133c569874d0/w12%252004_list_append_remove">購物清單</a></p>
<div>
<div class="line number1 index0 alt2">
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">shopping_list = ["carrots", "chocolate", "olives"] #在shopping_list變數裡面有3個字串
print (shopping_list) #列印shopping_list變數
new_item = input("What else do I have to buy?") #設定一個變數為new_item其等於input指令回傳之數值
 
if new_item in shopping_list:  #如果 "變數new_item(想買的物品)"回傳之值 在"shopping_list(購物清單)"字串當中就執行以下程式
    print (new_item + " is/are already in the shopping list") #列印 "new_item變數的數值"+字串is/are already in the shopping list
    print (shopping_list) #列印shopping_list字串
else:                    #反之
    shopping_list.append(new_item) #購物清單.加入(想要購買的物品)    如果不在購物清單內那就將未在字串中物品加入購物清單
    print (shopping_list) #列印購物清單
#以下是移除物品的程式
item_to_remove = input("What do I have to remove?") #item_to_remove(想要移除的物品)
 
if item_to_remove in shopping_list: #如果 想要移除的物品在購物清單中 那就執行
    shopping_list.remove(item_to_remove) #把購物清單.移除(想要移除的物品)
    print (shopping_list) #列印購物清單
else:                     #反之
    print (item_to_remove + " is/are not in the list") #列印 想要移除的物品+is/are not in the list(不在清單中)
    print (shopping_list) #列印購物清單
</pre>
<p>第五題:index() pop() insert()</p>
<p>Q5:<a href="https://mdecp2024.github.io/hw-HAU-UN102/content/Brython.html?src=https://gist.githubusercontent.com/HAU-UN102/c779090b2b50676fb3f4808ab08bc8d7/raw/25e0d6972871d368dc7c332142944936e19a2db6/w12%252005_list_index_pop_insert">今日菜單</a></p>
<div>
<div>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">todays_menu = ["burger", "salad", "coke"]  #todays_menu變數=今天菜單["burger", "salad", "coke"
print(todays_menu) #列印side_dish_index  列印他在第幾位

ide_dish_index = todays_menu.index("salad")  #side_dish_index變數 = 今日菜單.找出"沙拉"位於字串中第幾個
print (side_dish_index)  #列印side_dish_index  列印他在第幾位
todays_menu.pop(side_dish_index)  #今日菜單.移除字串中的元素(side_dish_index變數"沙拉")  這裡意思是移除沙拉
print (todays_menu) #列印今日菜單
todays_menu.insert(side_dish_index, "fries")  #今日菜單.在字串中插入(side_dish_index, "fries")   這裡意思是加入薯條
print (todays_menu) #列印今日菜單</pre>
</div>
<div></div>
</div>
</div>
</div>
<h3>w13_hw</h3>
<p><a href="https://gist.githubusercontent.com/HAU-UN102/f2c9958fc15dcc510246c2845c4614cd/raw/391e77efd9e2592a02d6b1526291939b86447cc5/w13">程式</a></p>
<!-- 導入 brython 程式庫 -->
<p>
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
</p>
<!-- 啟動 Brython -->
<p>
<script>
window.onload=function(){
brython({debug:1, pythonpath:['./../cmsimde/static/','./../downloads/py/']});
}
</script>
</p>
<div id="brython_div1"></div>
<p>
<script type="text/python3">
from browser import html
from browser import document as doc
import math
  
canvas = html.CANVAS(width=500, height=500)
brython_div = doc["brython_div1"]
brython_div <= canvas
  
ctx = canvas.getContext("2d")
ctx.lineWidth = 4
 
#混色的
ctx.globalCompositeOperation = "screem"
 
 
#黑邊圓*2(每個畫四個邊邊)
ctx.strokeStyle = 'black'
#第一個圓
ctx.beginPath()
ctx.arc(160, 160, 141, 0.25 * math.pi,0.75 * math.pi)
ctx.fillStyle = "Turquoise"
ctx.fill()
ctx.stroke()
 
ctx.beginPath()
ctx.arc(160, 160, 141, 0.75 * math.pi,1.25 * math.pi)
ctx.fillStyle = "Tomato"
ctx.fill()
ctx.stroke()
 
ctx.beginPath()
ctx.arc(160, 160, 141, 1.25 * math.pi,1.75 * math.pi)
ctx.fillStyle = "SpringGreen"
ctx.fill()
ctx.stroke()
 
ctx.beginPath()
ctx.arc(160, 160, 141, 1.75 * math.pi,0.25 * math.pi)
ctx.fillStyle = "FloralWhite"
ctx.fill()
ctx.stroke()
 
#第二個圓
ctx.beginPath()
ctx.arc(260, 260, 141, 1.25 * math.pi,1.75 * math.pi)
ctx.fillStyle = "Purple"
ctx.fill()
ctx.stroke()
 
ctx.beginPath()
ctx.arc(260, 260, 141, 1.75 * math.pi,0.25 * math.pi)
ctx.fillStyle = "OliveDrab"
ctx.fill()
ctx.stroke()
 
ctx.beginPath()
ctx.arc(260, 260, 141, 0.25 * math.pi,0.75 * math.pi)
ctx.fillStyle = "Orange"
ctx.fill()
ctx.stroke()
 
ctx.beginPath()
ctx.arc(260, 260, 141, 0.75 * math.pi,1.25 * math.pi)
ctx.fillStyle = "MediumVioletRed"
ctx.fill()
ctx.stroke()
 
 
#紅方形*2(4個三角形)
ctx.strokeStyle = 'red'
ctx.beginPath()
ctx.moveTo(60,60)
ctx.lineTo(60,260)
ctx.lineTo(260,260)
ctx.fillStyle = "Gold"
ctx.fill()
ctx.stroke()
 
ctx.beginPath()
ctx.moveTo(60,60)
ctx.lineTo(260,60)
ctx.lineTo(260,260)
ctx.fillStyle = "Indigo"
ctx.fill()
ctx.stroke()
 
ctx.beginPath()
ctx.moveTo(160,160)
ctx.lineTo(360,160)
ctx.lineTo(360,360)
ctx.fillStyle = "Cyan"
ctx.fill()
ctx.stroke()
 
ctx.beginPath()
ctx.moveTo(160,160)
ctx.lineTo(160,360)
ctx.lineTo(360,360)
ctx.fillStyle = "SpringGreen"
ctx.fill()
ctx.stroke()
 
  
#重疊的小方型
ctx.beginPath()
ctx.moveTo(160,160)
ctx.lineTo(160,260)
ctx.lineTo(260,260)
ctx.fillStyle = "Turquoise"
ctx.fill()
ctx.stroke()
 
ctx.beginPath()
ctx.moveTo(160,160)
ctx.lineTo(260,160)
ctx.lineTo(260,260)
ctx.fillStyle = "SlateBlue"
ctx.fill()
ctx.stroke()
 
 
#籃斜線
ctx.strokeStyle = 'blue'
ctx.beginPath() 
ctx.moveTo(60, 60)
ctx.lineTo(260, 260)
ctx.stroke()
</script>
</p>
<h3>w14_hw</h3>
<p><a href="https://mdecp2024.github.io/hw-HAU-UN102/content/Brython.html?src=https://gist.githubusercontent.com/HAU-UN102/87d70a5daf7ae6f59b4aa05319a79332/raw/21b414452eac92c083f9091bab7d03e073735d00/w14">程式</a></p>
<h3>w15</h3>
<p>題目一:<a href="https://mdecp2024.github.io/hw-HAU-UN102/content/Brython.html?src=https://gist.githubusercontent.com/HAU-UN102/a9c1d5bc4136ef5471d5fc4067b1d0b2/raw/a13a194c2085219eb00a99aeed233dc037c9e36a/w15">anchor</a></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false"># 初始化變數
sum = 0
init = 1
upto = 100

# 使用 for 迴圈進行累加
for i in range(init, upto + 1):
sum += i # sum = sum + i 的簡寫

# 顯示結果
print(f"從 {init} 累加到 {upto} 的總和是: {sum}")</pre>
<p>題目二:<a href="https://mdecp2024.github.io/hw-HAU-UN102/content/Brython.html?src=https://gist.githubusercontent.com/HAU-UN102/53126928112944add50ae8391b5697e6/raw/909b10f6f0c68583c8e6314f199dd1e37e0ad92b/w15_02">addto</a></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false"># 定義函數 addto
def addto(start, end):
# 初始化累加結果變數
total = 0

# 使用 for 迴圈進行累加
for i in range(start, end + 1):
total += i # sum = sum + i 的簡寫

# 返回總和
return total

# 呼叫函數並顯示結果
result = addto(1, 100)
print(f"從 1 累加到 100 的總和是: {result}")</pre>
<p>題目三:<a href="https://mdecp2024.github.io/hw-HAU-UN102/content/Brython.html?src=https://gist.githubusercontent.com/HAU-UN102/060e2c072c4f8e7dbe9c777f488338d1/raw/4ec57bdffdec8c026e1b369dc1046195652b65ec/w15_03">add_only_even</a></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false"># 定義函式 add_only_even
def add_only_even(start, end):
# 初始化偶數累加總和
total = 0

# 使用 for 迴圈遍歷範圍
for i in range(start, end + 1):
if i % 2 == 0: # 檢查是否為偶數
total += i # 累加偶數

# 返回總和
return total

# 呼叫函數並顯示結果
result = add_only_even(1, 100)
print(f"從 1 累加到 100 的偶數總和是: {result}")

</pre>
<p><span>題目四:<a href="https://mdecp2024.github.io/hw-HAU-UN102/content/Brython.html?src=https://gist.githubusercontent.com/HAU-UN102/94c440284c276a8dd8a8c162f5948e93/raw/722abdee7e128d23e81001975848decc6e5097ce/w15_04">add_avoid_8</a></span></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false"># 定義函式 add_avoid_8
def add_avoid_8(start, end):
# 初始化總和變數
total = 0

# 使用 for 迴圈遍歷範圍
for i in range(start, end + 1):
# 檢查數字是否包含 "8"
if '8' not in str(i): # 如果數字轉為字串後不包含 "8"
total += i # 累加

# 返回總和
return total

# 呼叫函數並顯示結果
result = add_avoid_8(1, 100)
print(f"從 1 累加到 100 (避開包含 '8' 的數字) 的總和是: {result}")</pre>
<p><br/><br/></p>
<p><br/><br/></p><h1>HW 2</h1>
<h2>HW 2 Exam</h2>
<p>每六人為一組進行協同程式練習</p>
<p>透過 Jupyterlab 協同網頁, 輪流指定各組編寫 HW 2 相關的程式練習, 以及網頁內容 (localhost 與 Codespaces 環境)編輯.</p>
<h1>HW 3</h1>
<h4>主題: Python 的數字、演算法與迴圈 (20%)</h4>
<p style="padding-left: 30px;">Python 課程教材: <a href="https://www.learnpythonwithjupyter.com/">https://www.learnpythonwithjupyter.com/</a> - PART 4 and Part 5</p>
<p>完成上述流程整理後, 請將 HW3 自評分數輸入 cp2024 自評表單中.</p>
<h2>HW 3 Exam</h2>
<p>每六人為一組進行協同程式練習</p>
<p>透過 Jupyterlab 協同網頁, 輪流指定各組編寫 HW 3 相關的程式練習, 以及網頁內容 (localhost 與 Codespaces 環境)編輯.</p>
<h1>HW 4</h1>
<h4>主題: 利用 Python 控制機電模擬系統 (20%)</h4>
<p style="padding-left: 30px;">利用 <a href="https://solvespace.com/">https://solvespace.com/</a> 建立機械系統零組件</p>
<p style="padding-left: 30px;">利用 <a href="https://www.coppeliarobotics.com/">CoppeliaSim</a> 建立機電模擬系統</p>
<p style="padding-left: 30px;">利用 <a href="https://manual.coppeliarobotics.com/en/zmqRemoteApiOverview.htm">Python</a> 跨網路控制瀏覽器上的機電模擬系統</p>
<p style="padding-left: 30px;">範例:</p>
<p style="padding-left: 60px;"><a href="/downloads/cd2023_pj3ag4_zmq_football_4.7.7z">cd2023_pj3ag4_zmq_football_4.7.7z</a></p>
<p style="padding-left: 60px;"><a href="https://localhost:9446/downloads/cd2024_2b_g6_steel_ball_platform_nxopen_copsim.7z">cd2024_2b_g6_steel_ball_platform_nxopen_copsim.7z</a></p>
<p>完成上述流程整理後, 請將 HW4 自評分數輸入 cp2024 自評表單中.</p>
<h2>HW 4 Exam</h2>
<p>每六人為一組進行協同程式練習</p>
<p>透過 Jupyterlab 協同網頁, 輪流指定各組編寫 HW 4 相關的程式練習, 以及網頁內容 (localhost 與 Codespaces 環境)編輯.</p>
<h1>Final Report</h1>
<p>期末口頭與書面專題報告 (20%)</p>
<p>期末口頭專題報告影片:</p>
<p style="padding-left: 30px;">......</p>
<p>期末書面專題報告檔案 (pdf):</p>
<p style="padding-left: 30px;">......</p>
<p>電腦輔助設計與實習課程總結心得:</p>
<p style="padding-left: 30px;">......</p>
<p>期末報告自評成績:</p>
<p style="padding-left: 30px;">完成上述流程後, 請將 Final Report 自評分數輸入 cp2024 自評表單中.</p>
<h1>Brython</h1>
<p>從 1 累加到 100:</p>
<p><button id="add1to100">1 add to 100</button></p>
<!-- 導入 brython 程式庫 -->
<p>
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
</p>
<!-- 啟動 Brython -->
<p>
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
</p>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="/static/Cango-24v03-min.js"></script>
<script src="/static/gearUtils-09.js"></script>
<script src="/static/SVGpathUtils-6v03-min.js"></script>
<script src="/static/sylvester.js"></script>
<script src="/static/PrairieDraw.js"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
</p>
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add(ev):
    Ace2.editor.setValue(add_src)
    Ace2.editor.scrollToRow(0)
    Ace2.editor.gotoLine(0)
    Ace2.run()

# id 為 "add1to100" 的按鈕點按時, 執行 add 方法
doc["add1to100"].bind('click', add)
</script>
</p>
<p><!-- add 1 to 100 結束--></p>
<!-- editor1 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div1"></div>
<!-- editor1 結束 --><hr/><!-- ########################################## -->
<p>從 1 累加到 100 part2:</p>
<p><button id="add1to100part2">1 add to 100</button><button id="cango_three_gears">cango_three_gears</button><button id="bsnake">BSnake</button><button id="aitetris">AI Tetris</button><button id="threejsblock">Rotating Block</button></p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()
Ace3 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run2():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src2"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace3.editor.setValue(prog)
    Ace3.editor.scrollToRow(0)
    Ace3.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace3.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run2'].bind('click', Ace3.run)
doc['kw_show_console2'].bind('click', Ace3.show_console)
doc['kw_clear_console2'].bind('click', Ace3.clear_console)
doc['clear_bd2'].bind('click', clear_bd2)
# 呼叫函式執行
run2()
</script>
</p>
<p><!-- add 1 to 100 part2 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace4 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )

# 透過 Ace4 以類別建立一個通用的 button2, 可以在多個案例中將 gist 程導入編輯區

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace4.editor.setValue(open(self.url).read())
        Ace4.editor.scrollToRow(0)
        Ace4.editor.gotoLine(0)
        Ace4.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add2(ev):
    Ace4.editor.setValue(add_src)
    Ace4.editor.scrollToRow(0)
    Ace4.editor.gotoLine(0)
    Ace4.run()

# id 為 "add1to100part2" 的按鈕點按時, 執行 add 方法
doc["add1to100part2"].bind('click', add2)
# 以下為運用 button2 class 的通用 gist 程式導入區
################################## cango_three_gears start
cango_three_gears_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/cango_three_gears_brython_div2.py"
cango_three_gears = button2(cango_three_gears_url)
doc["cango_three_gears"].bind("click", cango_three_gears.do)
################################## cango_three_gears end
################################## bsnake start
bsnake_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/kmol_snakey.py"
bsnake = button2(bsnake_url)
doc["bsnake"].bind("click", bsnake.do)
################################## bsnake end
################################## aitetris start
aitetris_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/pygame_to_brython_tetris_ai.py"
aitetris = button2(aitetris_url)
doc["aitetris"].bind("click", aitetris.do)
################################## aitetris end
################################## threejsblock start
threejsblock_url = "https://gist.githubusercontent.com/mdecycu/2c6323eff49b496d1bafd210f3ec9707/raw/df37802f9e8a386b6424f7945af622b1cd0a9ca5/threejs_rotating_block.py"
threejsblock = button2(threejsblock_url)
doc["threejsblock"].bind("click", threejsblock.do)
################################## threejsblock end
</script>
</p>
<p><!-- add 1 to 100 part2 結束--></p>
<!-- editor2 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor2" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename2" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src2', 'kw_filename2');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run2">Run</button> <button id="kw_show_console2">Output</button> <button id="kw_clear_console2">清除輸出區</button><button id="clear_bd2">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console2"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div2"></div>
<!-- editor2 結束 --><hr/>
<p>
<script src="https://unpkg.com/three@0.144.0/build/three.js" type="text/javascript"></script>
</p>